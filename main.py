import requests
from telegram import Bot
from datetime import datetime, timezone
import time

# üîê –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
TOKEN = "7570198764:AAHHQQCc0ZDzyYRnDPPjxVFe-020KXhUYXc"        
CHAT_ID = "5949980225"          

bot = Bot(token=TOKEN)

# ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
def fetch_new_tokens():
    url = "https://api.dexscreener.com/latest/dex/pairs"  # –∏–ª–∏ /solana –∏ —Ç.–¥.
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json().get("pairs", [])
        return data
    except Exception as e:
        bot.send_message(chat_id=CHAT_ID, text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API:\n{e}")
        return []

# ‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —É—Å–ª–æ–≤–∏—è–º
def filter_tokens(tokens):
    results = []
    now = datetime.now(timezone.utc)
    for token in tokens:
        try:
            cap = token.get("fdv", 0)
            created_at = datetime.fromtimestamp(token["pairCreatedAt"] / 1000, tz=timezone.utc)
            age_minutes = (now - created_at).total_seconds() / 60
            info_links = [token.get("info", {}).get("website"), token.get("info", {}).get("telegram")]

            if cap and cap <= 50000 and age_minutes <= 10 and any(info_links):
                results.append(token)
        except Exception as e:
            continue
    return results

# ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤ –≤ Telegram
def send_alerts(tokens):
    for token in tokens:
        try:
            msg = (
                f"üöÄüí• –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω: {token['baseToken']['symbol']}\n"
                f"–ö–∞–ø–∞: {token.get('fdv', '‚ùì')}$\n"
                f"{token.get('url', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')}"
            )
            bot.send_message(chat_id=CHAT_ID, text=msg)
        except Exception as e:
            bot.send_message(chat_id=CHAT_ID, text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–ª–µ—Ä—Ç–∞:\n{e}")

# üîÅ –¶–∏–∫–ª: –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
while True:
    new_tokens = fetch_new_tokens()
    filtered = filter_tokens(new_tokens)
    if filtered:
        send_alerts(filtered)
    time.sleep(60)
